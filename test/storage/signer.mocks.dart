// Mocks generated by Mockito 5.0.7 from annotations
// in firebase_storage/test/signer.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:firebase_storage/storage/signer.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeAuthClient extends _i1.Fake implements _i2.AuthClient {}

class _FakeBucketI extends _i1.Fake implements _i2.BucketI {}

class _FakeV2SignedUrlQuery extends _i1.Fake implements _i2.V2SignedUrlQuery {}

class _FakeV4SignedUrlQuery extends _i1.Fake implements _i2.V4SignedUrlQuery {}

/// A class which mocks [URLSigner].
///
/// See the documentation for Mockito's code generation for more information.
class MockURLSigner extends _i1.Mock implements _i2.URLSigner {
  MockURLSigner() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AuthClient get authClient =>
      (super.noSuchMethod(Invocation.getter(#authClient),
          returnValue: _FakeAuthClient()) as _i2.AuthClient);
  @override
  _i2.BucketI get bucket => (super.noSuchMethod(Invocation.getter(#bucket),
      returnValue: _FakeBucketI()) as _i2.BucketI);
  @override
  _i3.Future<String> getSignedUrl(_i2.SignerGetSignedUrlConfig? cfg) =>
      (super.noSuchMethod(Invocation.method(#getSignedUrl, [cfg]),
          returnValue: Future<String>.value('')) as _i3.Future<String>);
  @override
  _i3.Future<_i2.V2SignedUrlQuery> getSignedUrlV2(
          _i2.GetSignedUrlConfigInternal? config) =>
      (super.noSuchMethod(Invocation.method(#getSignedUrlV2, [config]),
              returnValue:
                  Future<_i2.V2SignedUrlQuery>.value(_FakeV2SignedUrlQuery()))
          as _i3.Future<_i2.V2SignedUrlQuery>);
  @override
  _i3.Future<_i2.V4SignedUrlQuery> getSignedUrlV4(
          _i2.GetSignedUrlConfigInternal? config) =>
      (super.noSuchMethod(Invocation.method(#getSignedUrlV4, [config]),
              returnValue:
                  Future<_i2.V4SignedUrlQuery>.value(_FakeV4SignedUrlQuery()))
          as _i3.Future<_i2.V4SignedUrlQuery>);
  @override
  String getCanonicalHeaders(Map<String, dynamic>? headers) =>
      (super.noSuchMethod(Invocation.method(#getCanonicalHeaders, [headers]),
          returnValue: '') as String);
  @override
  String getCanonicalRequest(
          {String? method,
          String? path,
          String? query,
          String? headers,
          String? signedHeaders,
          String? contentSha256}) =>
      (super.noSuchMethod(
          Invocation.method(#getCanonicalRequest, [], {
            #method: method,
            #path: path,
            #query: query,
            #headers: headers,
            #signedHeaders: signedHeaders,
            #contentSha256: contentSha256
          }),
          returnValue: '') as String);
  @override
  String getCanonicalQueryParams(_i2.Query? query) =>
      (super.noSuchMethod(Invocation.method(#getCanonicalQueryParams, [query]),
          returnValue: '') as String);
  @override
  String getResourcePath(bool? cname, String? bucket, String? file) => (super
      .noSuchMethod(Invocation.method(#getResourcePath, [cname, bucket, file]),
          returnValue: '') as String);
}
